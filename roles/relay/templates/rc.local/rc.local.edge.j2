#!/bin/sh -e
#
# This file is managed by puppet
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

iptables -F INPUT
{% if ansible_fqdn != 'voc.cdn.as250.net' %}
iptables -A INPUT -p tcp -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
iptables -A INPUT -i lo -j ACCEPT
{% endif %}

# allow all from trusted ips
{% for comment, ip in trusted_ipv4_ips.iteritems() %}
# {{ comment }}
iptables -A INPUT -s {{ ip }} -j ACCEPT -m comment --comment "{{ comment }}"
{% endfor %}

iptables -A INPUT -p tcp --sport 1024:65535 --dport 80   -j ACCEPT
iptables -A INPUT -p tcp --sport 1024:65535 --dport 8000 -j ACCEPT
iptables -A INPUT -p tcp -j REJECT --reject-with tcp-reset

# ip6tables
ip6tables -F INPUT
{% if ansible_fqdn != 'voc.cdn.as250.net' %}
ip6tables -A INPUT -p tcp -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
{% endif %}

# allow all from trusted ips
{% for comment, ip in trusted_ipv6_ips.iteritems() %}
# {{ comment }}
ip6tables -A INPUT -s {{ ip }} -j ACCEPT -m comment --comment "{{ comment }}"
{% endfor %}

ip6tables -A INPUT -p tcp --sport 1024:65535 --dport 80 -j ACCEPT
ip6tables -A INPUT -p tcp --sport 1024:65535 --dport 8000 -j ACCEPT
ip6tables -A INPUT -p tcp -j REJECT --reject-with tcp-reset

exit 0
